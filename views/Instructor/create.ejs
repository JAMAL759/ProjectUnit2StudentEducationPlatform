<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1> This is the instructor make page</h1>

    <form  method="post">
        <label for="name"> Name: </label>
        <input name="name" id="name" type="text">

        <label for="userName"> UserName: </label>
        <input name="userName" id="userName" type="text" >

        <label for="collage"> </label>
        <select  multiple="multiple"   name="collage" id="collage" >
            
            <% allCollage.forEach( (obj)=> { %>

                <option value="<%= obj.id %>"> <%= obj.name %></option>
                    <% }) %>
        </select>

        <label  for="Student"> Student: </label>
        <select  multiple="multiple" name="Student" id="Student"> 
           
        </select>

       
        <input name="user" id="user" type="text" hidden >


        <label for="course"> Choose your courses: </label>
        <select  multiple="multiple" name="course" id="course"> 
           
        </select>

        <button> Submit </button>
    </form>





    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.1/axios.min.js"></script>


    <script>
        console.log("I'm right here ")
        const optionCollege = document.querySelector("#collage")
        const optionInstructor = document.querySelector("#course")
        const optionStudent = document.querySelector("#Student")
        let InstructorArray = []
        let isAppear = false

        optionCollege.addEventListener("change",async(event)=>{

            try{
            optionInstructor.childNodes.forEach((event)=>{
                
                optionInstructor.removeChild(event);
            })
        } catch(error) {
            console.log("Their is an error in removing " , error)
        }


        try{
            optionStudent.childNodes.forEach((event)=>{
                    console.log(event)
                optionStudent.removeChild(event);
            })
        } catch(error) {
            console.log("Their is an error in removing " , error)
        }


            try{
                const returnedValue = await axios.get("/instructor/find/collage/" + event.target.value)
               // const returnedValue2 = await axios.get("/instructor/find/Instructor/" + event.target.value)
                const returnedValue3 =  await axios.get("/instructor/find/Instructor/" + event.target.value)
            console.log("this is the returnedValue = ", returnedValue)
          //  console.log("this is the returnedValue2 = ", returnedValue2)
         console.log(returnedValue.data)

         console.log(returnedValue3)
                
        


                

                returnedValue.data.forEach((obj) => {
                 //   if(isAppear == true ){
                      const Instructorr =  document.createElement("option");
                      Instructorr.value = obj._id
                      Instructorr.textContent = obj.name
                           optionInstructor.appendChild(Instructorr)
                        
                        console.log("This is the isAppear in the false condition = ", isAppear)
             
                 
                })


                returnedValue3.data.forEach((obj) => {
                 //   if(isAppear == true ){
                      const Instructorr =  document.createElement("option");
                      Instructorr.value = obj._id
                      Instructorr.textContent = obj.name
                           optionStudent.appendChild(Instructorr)
           
                 
                })


                
           
          //    isAppear = !isAppear
                console.log(" This is the is appear  = " , isAppear);
            }catch(error) {
                console.log("Their is an error in ajax " , error)
            }
           
        })


        const StudentSelect = document.querySelector("#course")


    </script>

</body>
</html>


<!-- 

const {model , Schema} = require("mongoose");


const InstructorSchema = new Schema({
    
    name: {
        type: String,
        requird: [true , "Please give me your name"]
    },
    userName:{
        type: String,
        required: [true , "Please give a username"]
    },
     collage: {
         type: Schema.Types.ObjectId ,
        ref:"Collage"
     },
     Student: {
        type: Schema.Types.ObjectId ,
        ref:"Student"
     },
     user : {
        type: Schema.Types.ObjectId ,
        ref:"User"
     },
     course:{
        type: Schema.Types.ObjectId ,
        ref:"Course"
     }

});


const Instructor = model("Instructor" , InstructorSchema);

module.exports = Instructor;



-->