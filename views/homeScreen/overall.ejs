<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <style>

#header{

    display:flex;


    background-color: rgb(238, 241, 241);
border-radius: 10px;

-webkit-box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, 5px 5px 15px 5px rgba(0,0,0,0); 
box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, 5px 5px 15px 5px rgba(0,0,0,0);

justify-content: center;


}

#grid ul li a{
    text-decoration: 
    none;
    color: black
}


#grid ul li {
    text-decoration: none;
    color: black;
    list-style: none;
    font-weight:bold
}






#grid ul {

    display: flex;
    text-decoration: none;
    color: black;
    list-style: none;
gap: 100px;
}


#header1{

display:flex;


height: 50%;
width: 40%;
background-color: rgb(255, 255, 255);
border-radius: 20px;

-webkit-box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, 5px 5px 15px 5px rgba(0,0,0,0); 
box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, 5px 5px 15px 5px rgba(0,0,0,0);

justify-content: center;
margin: auto;


}





#grid1 ul {

display: flex;
text-decoration: none;
color: black;
list-style: none;
gap: 40px

}

#grid1 ul li a {

display: flex;
text-decoration: none;
color: black;
list-style: none;



}






#mainGrid{
    display: flex;
    flex-direction: row;
}

#leftGrid{
  display: flex;

  

    border-radius: 20px;
    background-color: rgb(238, 241, 241);
    -webkit-box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, 5px 5px 15px 5px rgba(0,0,0,0); 
box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, 5px 5px 15px 5px rgba(0,0,0,0);

margin-top: 5%;

}


#leftGrid ul li {
    margin-top: 70px;
  
}

#leftGrid ul li a  {
    text-decoration: none;
    color: black
}


#centerGrid{
    width: 67%;

height: 80%;

border-radius: 20px;
background-color: rgb(255, 255, 255);
-webkit-box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, 5px 5px 15px 5px rgba(0,0,0,0); 
box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, 5px 5px 15px 5px rgba(0,0,0,0);

margin-top: 5%;

margin-left: 5%;
}

#centerGridCard{
display: flex;
    width: 28%;
    height: 200px;
    background-color: #000000;
    border-radius: 10px;
    margin-left: 2%;
    color: whitesmoke;
    margin-top: 3%;
    margin-bottom: 1%;
    justify-content: center;
}

#centerGridSubmit{
    width: 300px;
    height: 50px;
    background-color: #000000;
    border-radius: 10px;
    margin-left: 5%;
    color: whitesmoke;
}




#buttonSection{

    display: flex;
    flex-direction: row;
    justify-content:space-around;
  

    justify-content: center;
    gap: 20px;
    
    flex-wrap: wrap;
}


#cover{

    display: flex;
    flex-direction: row;
    margin-left: 23%;
    
}



#buttonSection{
    width: 400px;
    height: 200px;
    margin-top: 3%;
    margin-left: 2%;
    background-color: aliceblue;
    -webkit-box-shadow: -10px 0px 13px -7px #8f9695, 10px 0px 13px -7px #8f9695, 5px 5px 15px 5px rgba(0,0,0,0); 
box-shadow: -10px 0px 13px -7px #8f9695, 10px 0px 13px -7px #8f9695, 5px 5px 15px 5px rgba(0,0,0,0);
border-radius: 10px;



}

#InstructorElem {
justify-content: center;
text-align: center;

    width: 90px;
    height: 30px;

    background-color: rgb(200, 207, 205);


    -webkit-box-shadow: -10px 0px 13px -7px #8f9695, 10px 0px 13px -7px #8f9695, 5px 5px 15px 5px rgba(0,0,0,0); 
box-shadow: -10px 0px 13px -7px #8f9695, 10px 0px 13px -7px #8f9695, 5px 5px 15px 5px rgba(0,0,0,0);
border-radius: 7px;
}






    </style>

</head>
<body>
    <div id="header">
        
    <nav id="grid"> 

        <ul> 

                <li> <a href="/student"> Student  </a></li>

                <li> <a href="/instructor/<%= user.username%>"> Instructors </a></li>

                <li> <a href="#"> Collages </a></li>

                <li> <a href="#"> Login </a></li>

                <li> <a href="#"> SignUp </a></li>
                <li> <a href="/student/Profile"> <%= user.username%></a></li>
  
        </ul>

    </nav>
    
    
    </div>



    <div  id = "mainGrid" >


<div id="leftGrid"> 


    <ul> 
        <h3> Documentations</h3>
        <li> <a href="#"> Student Documentation </a></li>

        <li> <a href="#"> Instructors Documentation </a></li>

        <li> <a href="#"> Collages Documentation </a></li>

        <li> <a href="#"> Login Documentation </a></li>

        <li> <a href="#"> SignUp Documentation </a></li>

</ul>


</div>




<div id="centerGrid"> 

    <div id="header1">
        
        <nav id="grid1"> 
    
            <ul> 
    
                    <li> <a id="Student"  href="#"> Student  </a></li>
    
                    <li> <a id="Instructor" href="#"> Instructors </a></li>
    
                    <li> <a id="collage" href="#"> Collages </a></li>
      
            </ul>
    
        </nav>
        
        
        </div>



    <div id="cover">
    
        <div id="centerGridCard">
            <h3> mainCard</h3>
        </div>
    
        <div id="buttonSection">
    
        </div>
    
    </div>


    </div>



    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.1/axios.min.js"></script>


    <script>
        console.log("I'm right here ")
        const optionCollege = document.querySelector("#collage")
        const optionInstructor = document.querySelector("#cover")
        const optionCover = document.querySelector("#cover");
        const optionStudent = document.querySelector("#Student")
        let InstructorArray = []
        let CoursesArray = []
        let isAppear = false
        optionInstructor.style.flexWrap = "wrap"

        optionCollege.addEventListener("click",async(event)=>{



            try{
           
               const longRectangle =  document.getElementById("#buttonSection")
               const Card =  document.getElementById("#centerGridCard")
               longRectangle.removeChild();
               Card.removeChild();


        } catch(error) {
            console.log("Their is an error in removing " , error)
        }


            try{
                const returnedValue = await axios.get("/find/collegee")
        //         const returnedValue2 = await axios.get("/course/find/Instructor/" + event.target.value)
        //         const returnedValue3 =  await axios.get("/course/find/Student/" + event.target.value)
             console.log("this is the returnedValue = ", returnedValue.data)
        //     console.log("this is the returnedValue2 = ", returnedValue2)
        //  console.log(returnedValue.data)
                
        

        const returnedValue3 = await axios.get("/find/Instructors")
        console.log("This is the returnedValue3 = " , returnedValue3)
                

                returnedValue.data.forEach((obj) => {
                 //   if(isAppear == true ){

                 CoursesArray.push(obj._id)
                      const Instructorr =  document.createElement("div");
                      Instructorr.setAttribute("id" , "centerGridCard")
                      const headLine = document.createElement("h3")
                      headLine.textContent = obj.name;
                      headLine.setAttribute("id" , "headline")
                      Instructorr.appendChild(headLine)
                      const showcase = document.createElement("div")
                      showcase.setAttribute("id" , "buttonSection")
                     
                      returnedValue3.data.forEach((Instructors) => {

                                Instructors.collage.forEach((InstructorCollage) => {
                                        if(InstructorCollage ==  obj._id){
                                            console.log(InstructorCollage )
                                            console.log(obj._id);
                                            console.log("This is the collage , " ,obj.name , "and this is the instructor ", Instructors.name)
                                            console.log("I'm right here in the instructor assosicate ")
                                          const   InstructorName =  document.createElement("h4");
                                                    InstructorName.setAttribute("id" , "InstructorElem")
                                                    InstructorName.textContent = Instructors.name;

                                                    showcase.appendChild(InstructorName);
                                        }
                                })
                      })

                     // Instructorr.value = obj._id
                     // Instructorr.textContent = obj.name
                           optionInstructor.appendChild(Instructorr)
                           optionInstructor.appendChild(showcase)

                        //    optionCover.appendChild(Instructorr);
                        //    optionCover.appendChild(showcase);
                        
                        console.log("This is the isAppear in the false condition = ", isAppear)
             
                 
                })



            }catch(error) {
                console.log("Their is an error in ajax " , error)
            }



       
           
        })



        optionStudent.addEventListener("click",async(event)=>{



            try{
            optionInstructor.childNodes.forEach((event)=>{
                
                optionInstructor.removeChild(event);
            })
        } catch(error) {
            console.log("Their is an error in removing " , error)
        }


try{
    const returnedValue = await axios.get("/find/FindStudent")
//         const returnedValue2 = await axios.get("/course/find/Instructor/" + event.target.value)
//         const returnedValue3 =  await axios.get("/course/find/Student/" + event.target.value)
 console.log("this is the returnedValue = ", returnedValue.data)
//     console.log("this is the returnedValue2 = ", returnedValue2)
//  console.log(returnedValue.data)
    


const returnedValue3 = await axios.get("/find/Instructors")
console.log("This is the returnedValue3 = " , returnedValue3)
    

    returnedValue.data.forEach((obj) => {
     //   if(isAppear == true ){

     CoursesArray.push(obj._id)
          const Instructorr =  document.createElement("div");
          Instructorr.setAttribute("id" , "centerGridCard")
          const headLine = document.createElement("h3")
          headLine.textContent = obj.name;
          headLine.setAttribute("id" , "headline")
          Instructorr.appendChild(headLine)
          const showcase = document.createElement("div")
          showcase.setAttribute("id" , "buttonSection")
         
          returnedValue3.data.forEach((Instructors) => {

                    Instructors.Student.forEach((InstructorCollage) => {
                            if(InstructorCollage ==  obj._id){
                                console.log("I'm right here in the instructor assosicate  with teh following collage name ," , obj.name , "and with it's instructor " , Instructors.name)
                              const   InstructorName =  document.createElement("h4");
                                        InstructorName.setAttribute("id" , "InstructorElem")
                                        InstructorName.textContent = Instructors.name;

                                        showcase.appendChild(InstructorName);
                            }
                    })
          })

         // Instructorr.value = obj._id
         // Instructorr.textContent = obj.name
               optionInstructor.appendChild(Instructorr)
               optionInstructor.appendChild(showcase)

            //    optionCover.appendChild(Instructorr);
            //    optionCover.appendChild(showcase);
            
            console.log("This is the isAppear in the false condition = ", isAppear)
 
     
    })



}catch(error) {
    console.log("Their is an error in ajax " , error)
}




// try{
//     const returnedValue = await axios.get("/find/Instructors")
// //         const returnedValue2 = await axios.get("/course/find/Instructor/" + event.target.value)
// //         const returnedValue3 =  await axios.get("/course/find/Student/" + event.target.value)
//  console.log("this is the returnedValue = ", returnedValue.data)
// //     console.log("this is the returnedValue2 = ", returnedValue2)
// //  console.log(returnedValue.data)
    


// const returnedValue3 = await axios.get("/find/FindStudent")
// console.log("This is the returnedValue3 = " , returnedValue3)
    

//     returnedValue.data.forEach((obj) => {
//      //   if(isAppear == true ){

//      CoursesArray.push(obj._id)
//           const Instructorr =  document.createElement("div");
//           Instructorr.setAttribute("id" , "centerGridCard")
//           const headLine = document.createElement("h3")
//           headLine.textContent = obj.name;
//           headLine.setAttribute("id" , "headline")
//           Instructorr.appendChild(headLine)
//           const showcase = document.createElement("div")
//           showcase.setAttribute("id" , "buttonSection")
         
//           returnedValue3.data.forEach((Instructors) => {

//                     Instructors.collage.forEach((InstructorCollage) => {
//                             if(InstructorCollage ==  obj._id){
//                                 console.log("I'm right here in the instructor assosicate ")
//                               const   InstructorName =  document.createElement("h4");
//                                         InstructorName.setAttribute("id" , "InstructorElem")
//                                         InstructorName.textContent = Instructors.name;

//                                         showcase.appendChild(InstructorName);
//                             }
//                     })
//           })

//          // Instructorr.value = obj._id
//          // Instructorr.textContent = obj.name
//                optionInstructor.appendChild(Instructorr)
//                optionInstructor.appendChild(showcase)

//             //    optionCover.appendChild(Instructorr);
//             //    optionCover.appendChild(showcase);
            
//             console.log("This is the isAppear in the false condition = ", isAppear)
 
     
//     })



// }catch(error) {
//     console.log("Their is an error in ajax " , error)
// }






})




        const StudentSelect = document.querySelector("#course")


    </script>

</body>
</html>


